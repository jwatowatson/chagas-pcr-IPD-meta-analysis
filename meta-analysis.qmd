---
title: "Chagas Meta-analysis"
author: "James Watson"
format: html
editor: visual
---

```{r}
knitr::opts_chunk$set(cache = F, cache.comments = FALSE,
                      echo = T, include = TRUE, 
                      fig.width = 8, fig.height = 8,
                      fig.pos = 'H',dev = 'png', dpi = 300)

library(RColorBrewer)
library(tidyverse)
library(cmdstanr)
library(posterior)
library(bayesplot)
library(gridExtra)
library(survival)
library(survminer)


source('functions.R')
# source('make_adam.R')

RE_RUN_STAN_MODEL=T
```

Theoretical considerations around sensitivity

```{r theoretical_sensitivity, fig.width=10}
library(expint)
# probability that the max of k independent poisson draws is zero is given by the incomplete
# gamma function
my_lambdas = seq(from=log10(1/5000), to=log10(5000/5000),length.out=100)
par(las=1, cex.lab=1.3, cex.axis=1.3)
# 15 independent draws
plot(my_lambdas, 1-expint::gammainc(1,5*(10^my_lambdas))^15,
     type='l', panel.first=grid(), xaxt='n',
     xlab='Parasite density per ml',
     ylab='Probability at least one draw has at least 1 parasite',lwd=3, col='darkred')
vals = c(0.0002, 0.001, 0.01, .1, 1, 10)
axis(1, at = log10(vals),labels = vals)
abline(h=0.5,lty=2)
# 5 independent draws
lines(my_lambdas, 1-expint::gammainc(1,5*(10^my_lambdas))^5,
      lty=2,lwd=3,col='darkblue')
# single draw
lines(my_lambdas, 1-expint::gammainc(1,5*(10^my_lambdas)),
      lty=3,lwd=2)
```

## Load data

```{r}
load('RData/pcr_chagas.RData')

# load('RData/ID_map.RData')
# pcr_chagas = merge(pcr_chagas, ID_map, by='USUBJID', all=T)
```

## Plot PCR data

Triplicates

```{r heterosckedasticity, fig.height=8, fig.width=12}
pcr_chagas = pcr_chagas %>% 
  group_by(ID, VISIT, MBGRPID) %>%
  mutate(
    CT = ifelse(CT<25, NA, CT),
    repeats = sum(!is.na(CT)),
    CT_mean = mean(CT,na.rm = T),
    CT_sd = sd(CT,na.rm=T),
    n_40 = sum(CT==40,na.rm = T)
  ) 

pcr_chagas_trip = pcr_chagas %>% 
  filter(repeats==3, n_40<=3) %>%
  distinct(USUBJID, VISIT, MBGRPID, .keep_all = T)
pcr_chagas_trip %>% ggplot(aes(x=CT_mean, y=CT_sd,color=as.factor(n_40)))+
  geom_point()+
  geom_smooth(data = filter(pcr_chagas_trip, n_40==0))+
  theme_classic()+
  theme(axis.text=element_text(size=12),
        axis.title=element_text(size=14,face="bold"))+
  xlab('Mean CT value across triplicates')+
  ylab('Standard deviation of CT values')+
  labs(color='CT=40') 

```

### prep data

```{r}
# make summaries by sample, visit and baseline values
pcr_chagas = pcr_chagas %>% 
  group_by(ID, VISIT, MBREFID) %>%
  mutate(
    N_PCRs_sample = length(CT),
    N_pos_sample = sum(CT<40)) %>%
  group_by(ID,VISIT) %>% arrange(ID, Day_frm_rand, MBREFID, MBGRPID) %>%
  mutate(PCR_number = 1:length(CT)) %>%
  ungroup() %>% 
  filter(!(STUDYID=='E1224' & PCR_number>4 & VISIT=='Screening')) %>%
  group_by(ID,VISIT) %>%
  mutate(percent_pos = sum(CT<40)/length(CT),
         Any_Pos_40 = any(CT<40),
         N_PCRs = max(PCR_number),
         N_pos = sum(CT<40)) %>%
  group_by(ID) %>%
  mutate(
    Percent_pos_baseline = unique(percent_pos[VISIT=='Screening']),
    Mean_CT_inv_baseline = 40-mean(CT_mean[VISIT=='Screening']),
    N_FUP_VISITS = length(unique(VISIT[Day_frm_rand>EOT])),
    Day_last_Visit = max(MBDY)) %>%
  ungroup() %>%
  filter(PCR_number<=9) %>%
  arrange(STUDYID, ARM, Mean_CT_inv_baseline, Percent_pos_baseline,
          ID, VISIT_numeric, PCR_number)

dat_summary_visits = pcr_chagas %>% distinct(ID, MBDY, .keep_all = T)

dat_summary = pcr_chagas %>% distinct(ID, .keep_all = T)
table(dat_summary$STUDYID)
table(dat_summary$ARM, dat_summary$STUDYID)
table(dat_summary$N_FUP_VISITS)

table(dat_summary$ARM, dat_summary$BNZ_total_days)
```

```{r pcr_plot, fig.width=15, fig.height=12}
my_breaks = c(10, 30, 34, 36, 38, 39.99999,40)
my_breaks_legend = c('<30','30-34','34-36','36-38','38-40','>=40')
my_cols = c(brewer.pal(11, 'RdYlBu')[c(1,2,4,9,11)],brewer.pal(9, 'Pastel1')[9])

for(ss in unique(pcr_chagas$STUDYID)){
  pcr_chagas_ss=pcr_chagas %>% filter(STUDYID==ss)
  pcr_mat = make_matrix_pcr(pcr_dat = pcr_chagas_ss,
                            N_max_PCR = 9)
  
  par(mar=c(3,8,1,8))
  xx2 = pcr_chagas_ss %>% ungroup %>% distinct(ID,.keep_all = T)
  ind_y = which(!duplicated(xx2$ARM))
  plot_pcr_matrix(pcr_mat = pcr_mat,
                  my_breaks = my_breaks, 
                  my_break_legend = my_breaks_legend,
                  my_cols = my_cols,
                  arm_labels = unique(pcr_chagas_ss$ARM),
                  h_lines_ind = ind_y[-1]-0.5,
                  y_lab_ind = ind_y + diff(c(ind_y, nrow(pcr_mat)+1))/2)
}
```

placebo individuals in E1224 and BENDITA studies

```{r placebos, fig.height=6, fig.width=12}
visits_overlap = intersect(unique(pcr_chagas$VISIT_numeric[pcr_chagas$STUDYID=='BENDITA']),
                           unique(pcr_chagas$VISIT_numeric[pcr_chagas$STUDYID=='E1224']))

pcr_chagas_ss=pcr_chagas %>% 
  filter(ARM == 'PLACEBO',
         VISIT_numeric %in% visits_overlap)
pcr_mat = make_matrix_pcr(pcr_dat = pcr_chagas_ss,N_max_PCR = 9)

par(mar=c(5,5,0.5,0.5))
xx2 = pcr_chagas_ss %>% ungroup %>% distinct(ID,.keep_all = T)
ind_y = which(!duplicated(xx2$STUDYID))
plot_pcr_matrix(pcr_mat = pcr_mat,
                my_breaks = my_breaks, 
                my_break_legend = my_breaks_legend,
                my_cols = my_cols,
                arm_labels = c('BENDITA','E1224'),
                h_lines_ind = ind_y[-1]-0.5,
                y_lab_ind = ind_y + diff(c(ind_y, nrow(pcr_mat)+1))/2)
```

two versus eight weeks

```{r two_vs_eight, fig.height=6, fig.width=12}
pcr_chagas_ss=pcr_chagas %>% 
  filter(STUDYID %in% c('BENDITA'),
         ARM %in% c('BNZ 300MG 2W',
                    'BNZ 300MG 8W'))
pcr_mat = make_matrix_pcr(pcr_dat = pcr_chagas_ss,N_max_PCR = 9)

par(mar=c(4,7,0.5,0.5))
xx2 = pcr_chagas_ss %>% ungroup %>% distinct(ID,.keep_all = T)
ind_y = which(!duplicated(xx2$ARM))
plot_pcr_matrix(pcr_mat = pcr_mat,
                my_breaks = my_breaks, 
                my_break_legend = my_breaks_legend,
                my_cols = my_cols,
                arm_labels = c('BNZ 2 weeks','BNZ 8 weeks'),
                h_lines_ind = ind_y[-1]-0.5,
                y_lab_ind = ind_y + diff(c(ind_y, nrow(pcr_mat)+1))/2)

```

Weekly benznidazole works really well!

```{r weekly_bnz, fig.height=6, fig.width=12}
pcr_chagas_ss=pcr_chagas %>% 
  filter(ARM %in% c("BNZ 300MG/WK + E1224 300MG 8W",
                    "E1224 200MG 8W",
                    "E1224 400MG 8W"),
         VISIT_numeric %in% visits_overlap)
pcr_mat = make_matrix_pcr(pcr_dat = pcr_chagas_ss,N_max_PCR = 9)

par(mar=c(5,8,0.5,6))
xx2 = pcr_chagas_ss %>% ungroup %>% distinct(ID,.keep_all = T)
ind_y = which(!duplicated(xx2$ARM))
plot_pcr_matrix(pcr_mat = pcr_mat,
                my_breaks = my_breaks, 
                my_break_legend = my_breaks_legend,
                my_cols = my_cols,
                arm_labels = unique(pcr_chagas_ss$ARM),
                h_lines_ind = ind_y[-1]-0.5,
                y_lab_ind = ind_y + diff(c(ind_y, nrow(pcr_mat)+1))/2)
```

BNZ 150 for 4 weeks

```{r bnz_150_4wks, fig.height=10, fig.width=12}
pcr_chagas_ss=pcr_chagas %>% 
  filter(STUDYID %in% c('BENDITA'),
         ARM %in% c('BNZ 150MG 4W'))
pcr_mat = make_matrix_pcr(pcr_dat = pcr_chagas_ss,N_max_PCR = 9)

par(mar=c(2,7,0.5,0.5))
xx2 = pcr_chagas_ss %>% ungroup %>% distinct(ID,.keep_all = T)
ind_y = which(!duplicated(xx2$ARM))
plot_pcr_matrix(pcr_mat = pcr_mat,
                my_breaks = my_breaks, 
                my_break_legend = my_breaks_legend,
                my_cols = my_cols,
                arm_labels = unique(pcr_chagas_ss$ID),
                h_lines_ind = ind_y[-1]-0.5,
                y_lab_ind = 1:nrow(pcr_mat),cex_y_lab = .7)

# View(dat_summary %>% filter(ID %in% c('BENDITA_466','BENDITA_594')))

```

Order individuals by how many days BNZ and by total mg/kg dose

```{r days_bnz, fig.width=10, fig.height=8}
pcr_chagas_ss = pcr_chagas %>%
  filter(BNZ_total_days<=14,BNZ_total_days>0) %>%
  arrange(desc(BNZ_total_dose_mg_kg),desc(BNZ_total_days), 
          Mean_CT_inv_baseline, Day_frm_rand)
pcr_mat = make_matrix_pcr(pcr_dat = pcr_chagas_ss,N_max_PCR = 9)

pcr_chagas_ss_summary = pcr_chagas_ss %>% distinct(USUBJID,.keep_all = T)%>%
  select(USUBJID, STUDYID, ARM, BNZ_total_days, BNZ_total_dose_mg_kg, weight, BNZ_total_dose)

par(mar=c(3,3,0.5,4),las=1)
xx2 = pcr_chagas_ss %>% ungroup %>% distinct(ID,.keep_all = T)
ind_y = which(!duplicated(xx2$BNZ_total_days))
plot_pcr_matrix(pcr_mat = pcr_mat,
                my_breaks = my_breaks, 
                my_break_legend = my_breaks_legend,
                my_cols = my_cols,
                arm_labels = round(pcr_chagas_ss_summary$BNZ_total_dose_mg_kg,1),
                h_lines_ind = NULL,
                y_lab_ind = 1:nrow(pcr_chagas_ss_summary),
                cex_y_lab = .7, 
                plot_legend = F)
axis(4, at = 1:nrow(pcr_chagas_ss_summary), labels = pcr_chagas_ss_summary$BNZ_total_days, cex.axis=.7)
```

Total dose of fexinidazole

```{r dose_fex}
pcr_chagas_ss = pcr_chagas %>%
  filter(FOS_total_dose==0, FEX_total_dose>0, BNZ_total_dose==0,
         VISIT=='Screening' | Day_frm_rand>10,
         N_FUP_VISITS>2) %>%
  arrange(desc(FEX_total_dose), Mean_CT_inv_baseline, Day_frm_rand)
pcr_mat = make_matrix_pcr(pcr_dat = pcr_chagas_ss,N_max_PCR = 9)

par(mar=c(3,3,0.5,0.5))
xx2 = pcr_chagas_ss %>% ungroup %>% distinct(ID,.keep_all = T)
ind_y = which(!duplicated(xx2$FEX_total_dose))
plot_pcr_matrix(pcr_mat = pcr_mat,
                my_breaks = my_breaks, 
                my_break_legend = my_breaks_legend,
                my_cols = my_cols,
                arm_labels = unique(pcr_chagas_ss$FEX_total_dose),
                h_lines_ind = ind_y[-1]-0.5,
                y_lab_ind = ind_y + diff(c(ind_y, nrow(pcr_mat)+1))/2,
                cex_y_lab = .4, plot_legend = F)
```

Possible sample mix-up, this is identifiable using this graphical visualisation

```{r mix_up, fig.height=10, fig.width=12}
pcr_chagas_ss=pcr_chagas %>% 
  filter(STUDYID %in% c('BENDITA'),
         ARM %in% c('PLACEBO',
                    'BNZ 300MG 4W'))
pcr_mat = make_matrix_pcr(pcr_dat = pcr_chagas_ss,N_max_PCR = 9)

par(mar=c(2,7,0.5,0.5))
xx2 = pcr_chagas_ss %>% ungroup %>% distinct(ID,.keep_all = T)
ind_y = which(!duplicated(xx2$ARM))
plot_pcr_matrix(pcr_mat = pcr_mat,
                my_breaks = my_breaks, 
                my_break_legend = my_breaks_legend,
                my_cols = my_cols,
                arm_labels = unique(pcr_chagas_ss$ID),
                h_lines_ind = ind_y[-1]-0.5,
                y_lab_ind = 1:nrow(pcr_mat),cex_y_lab = .7)

# View(dat_summary %>% filter(ID %in% c('BENDITA_466','BENDITA_594')))

```

```{r fexi_reduces_ss_biomass, fig.height=6, fig.width=12}
visits_comp = c('Screening','D35','D63','D120','D180','D360')
pcr_chagas_ss=pcr_chagas %>% 
  filter(STUDYID %in% c('FEX12', 'E1224'),
         ARM %in% c('E1224 400MG 8W',
                    'FEX 1200MG 3D',
                    'FEX 600MG 3D + 1200MG 4D',
                    'FEX 600MG 10D'),
         VISIT_trans %in% visits_comp,
         N_FUP_VISITS>1)
pcr_mat = make_matrix_pcr(pcr_dat = pcr_chagas_ss,N_max_PCR = 9)

par(mar=c(4,2,0.5,0.5))
xx2 = pcr_chagas_ss %>% ungroup %>% distinct(ID,.keep_all = T)
ind_y = which(!duplicated(xx2$ARM))
plot_pcr_matrix(pcr_mat = pcr_mat,
                my_breaks = my_breaks, 
                my_break_legend = my_breaks_legend,
                my_cols = my_cols,
                arm_labels = unique(pcr_chagas_ss$ARM),
                h_lines_ind = ind_y[-1]-0.5,
                y_lab_ind = ind_y + diff(c(ind_y, nrow(pcr_mat)+1))/2)

```

## Quantitative analysis

### cumulative probabilities

cumulative probability of recurrent PCR

```{r cum_CT_values_FUP}
xlims=c(28,40)
xs=seq(28,40, by=.1)
pcr_chagas_ss = pcr_chagas %>% 
  filter(VISIT_numeric>EOT,
         STUDYID=='FEX12', CT<40) 
par(las=1,mfrow=c(2,2),family='serif')
plot(xs, 1-ecdf(pcr_chagas_ss$CT)(xs), main='FEX-12', xlab='CT', 
     ylab = 'Cumulative probability',panel.first=grid(),
     xlim=xlims,type='l',lwd=2)
text(x = 38,y=0.7,paste(round(100*(1-ecdf(pcr_chagas_ss$CT)(36))),'%',sep=''),cex=1.5)
abline(v=36,lty=2)

pcr_chagas_ss = pcr_chagas %>% 
  filter(VISIT_numeric>EOT,
         STUDYID=='BENDITA', 
         !USUBJID %in% c('594','681','342'),
         ARM!='PLACEBO',CT<40) 
par(las=1)
plot(xs, 1-ecdf(pcr_chagas_ss$CT)(xs), main='BENDITA', xlab='CT', 
     ylab = 'Cumulative probability',panel.first=grid(),
     xlim=xlims,type='l',lwd=2)
text(x = 38,y=0.7,paste(round(100*(1-ecdf(pcr_chagas_ss$CT)(36))),'%',sep=''),cex=1.5)
abline(v=36,lty=2)

pcr_chagas_ss = pcr_chagas %>% 
  filter(VISIT_numeric>EOT,
         STUDYID=='E1224', 
         !ARM%in%c('PLACEBO',"BNZ 300MG 8W"),
         CT<40) 
par(las=1)
plot(xs, 1-ecdf(pcr_chagas_ss$CT)(xs), main='E1224', xlab='CT', 
     ylab = 'Cumulative probability',panel.first=grid(),
     xlim=xlims,type='l',lwd=2)
text(x = 38,y=0.7,paste(round(100*(1-ecdf(pcr_chagas_ss$CT)(36))),'%',sep=''),cex=1.5)
abline(v=36,lty=2)

pcr_chagas_ss = pcr_chagas %>% 
  filter(VISIT_numeric>EOT,
         ARM%in%c('PLACEBO'),
         CT<40) 
par(las=1)
plot(xs, 1-ecdf(pcr_chagas_ss$CT)(xs), main='PLACEBO', xlab='CT', 
     ylab = 'Cumulative probability',panel.first=grid(),
     xlim=xlims,type='l',lwd=2)
text(x = 38,y=0.7,paste(round(100*(1-ecdf(pcr_chagas_ss$CT)(36))),'%',sep=''),cex=1.5)
abline(v=36,lty=2)
```

### rough failure estimates

```{r failure_proportions, fig.width=12, fig.height=8}
strong_fail = 38
summary_outcomes = pcr_chagas %>%
  filter(!is.na(CT), Day_frm_rand>EOT) %>%
  group_by(ID, VISIT) %>%
  mutate(N_PCRs = length(CT),
         N_pos = sum(CT < 40),
         N_weak_pos = sum(CT>strong_fail & CT<40),
         Borderline_pos = (N_pos==1 & N_weak_pos==1)) %>%
  distinct(ID, VISIT, .keep_all = T) %>%
  group_by(ID) %>%
  mutate(
    N_fup_visits = length(N_PCRs),
    N_fup_pcrs = sum(N_PCRs),
    N_pos_tot = sum(N_pos),
    N_weak_pos_tot = sum(N_weak_pos)) %>%
  distinct(ID, .keep_all = T) %>%
  filter(N_fup_visits>1)

xx=summary_outcomes %>% group_by(ARM) %>%
  summarise(
    N = length(N_pos_tot),
    `FUP Visits` = median(N_fup_visits),
    Fail = sum(N_pos_tot>0),
    `Weak Fail` = sum(N_weak_pos_tot==1 & N_pos_tot==1),
    `Strong Fail` = Fail- `Weak Fail`,
    `Percent Fail` = round(100*Fail/N),
    `Percent Strong Fail` = round(100*`Strong Fail`/N)
  ) %>% arrange(`Percent Strong Fail`)
xx

require(DescTools)
par(mar=c(10,5,1,1),las=1, cex.axis=1.3, cex.lab=1.3)
plot(1:nrow(xx), xx$`Percent Fail`, ylim=c(0,100),panel.first = grid(),
     xaxt='n', xlab='', ylab='Failure (%)',pch=15)
for(i in 1:nrow(xx)){
  out=100*BinomCI(x = xx$Fail[i], n = xx$N[i],method = 'jeffreys')
  lines(rep(i,2), out[2:3])
  
  out=100*BinomCI(x = xx$`Strong Fail`[i], n = xx$N[i],method = 'jeffreys')
  lines(rep(i,2)+.2, out[2:3],col='red')
}
axis(1, at=1:nrow(xx), labels = gsub(pattern = '+',replacement = '\n+',x = xx$ARM,fixed = T),
     las=2,cex.axis=1)
points(1:nrow(xx)+.2, xx$`Percent Strong Fail`,col='red',pch=16)
```

### stan model of cure

compile model

```{r stan_model}
file <- file.path("Stan_models/chagas_efficacy_model_v2.stan")
mod <- cmdstan_model(file)
PCR_spec = 1
```

how often do 2+ come from the same sample?

```{r}
double_pos = pcr_chagas %>%
  filter(!is.na(CT))%>%
  group_by(USUBJID, Day_frm_rand) %>%
  mutate(MBREFID_perm = gtools::permute(MBREFID),
         N_pos = sum(CT<40)) %>% 
  filter(N_pos==3) %>%
  mutate(N_blood_draws = length(unique(MBREFID[which(CT<40)])),
         N_blood_draws_perm = length(unique(MBREFID_perm[which(CT<40)]))) %>%
  distinct(USUBJID, Day_frm_rand, .keep_all = T)

table(double_pos$N_pos)
table(double_pos$N_blood_draws)
table(double_pos$N_blood_draws_perm)

```

### BENDITA fit

fit to Bendita data first to check if working

```{r bendita_stan_fit, fig.width=10, fig.height=8}
pcr_chagas_ss = pcr_chagas %>% 
  filter(!is.na(N_pos_sample), 
         !is.na(N_PCRs_sample), 
         VISIT_numeric>EOT, ARM!='PLACEBO',
         STUDYID=='BENDITA',
         #!USUBJID %in% c('681')
         !USUBJID %in% c('594','681','342')) 
data_list_stan=make_stan_dataset_model_v2(pcr_chagas_ss,
                                          PCR_spec = PCR_spec)

if(RE_RUN_STAN_MODEL){
  fit_ben <- mod$sample(
    data = data_list_stan,
    seed = 123,
    chains = 4,
    parallel_chains = 4,iter_sampling = 2000,
    refresh = 500 # print update every 500 iters
  )
  fit_ben$save_object(file = 'Rout/fit_bendita.RDS')
} else{
  fit_ben <- readRDS('Rout/fit_bendita.RDS')
}

gg_cure=mcmc_intervals(fit_ben$draws(c("p_1")))+
  ggplot2::scale_y_discrete(labels =
                              c("p_1[7]" ="Placebo",
                                "p_1[3]" ="BNZ 2wks",
                                "p_1[1]" ="BNZ 150 4wks",
                                "p_1[4]" ="BNZ 300 4wks",
                                "p_1[2]" ="BNZ 150 4wks + E1224",
                                "p_1[6]" ="BNZ 300 wkly + E1224",
                                "p_1[5]" ="BNZ 300 8wks"))+
  ggtitle('Probability of cure')+xlim(0,1)+theme_minimal()
gg_sample=mcmc_intervals(fit_ben$draws(c("p_2")))+
  ggplot2::scale_y_discrete(labels =
                              c("p_2[7]" ="Placebo",
                                "p_2[3]" ="BNZ 2wks",
                                "p_2[1]" ="BNZ 150 4wks",
                                "p_2[4]" ="BNZ 300 4wks",
                                "p_2[2]" ="BNZ 150 4wks + E1224",
                                "p_2[6]" ="BNZ 300 wkly + E1224",
                                "p_2[5]" ="BNZ 300 8wks"))+
  ggtitle('Probability of sampling parasites')+xlim(0,1)+theme_minimal()
grid.arrange(gg_cure, gg_sample,nrow=2)
mcmc_intervals(fit_ben$draws(c("q")))

draws <- fit_ben$draws(format = "matrix")
mean(draws[,'p_1[3]'] < draws[,'p_1[5]'])
```

### FEX fit

```{r fex_stan_fit, fig.width=10, fig.height=8}
pcr_chagas_ss = pcr_chagas %>% 
  filter(!is.na(N_pos_sample), 
         !is.na(N_PCRs_sample), 
         VISIT_numeric>EOT,
         STUDYID=='FEX12') 
data_list_stan=make_stan_dataset_model_v2(pcr_chagas_ss,PCR_spec=PCR_spec)
if(RE_RUN_STAN_MODEL){
  fit_fex <- mod$sample(
    data = data_list_stan,
    seed = 123,
    chains = 4,
    parallel_chains = 4,iter_sampling = 2000,
    refresh = 500 # print update every 500 iters
  )
  fit_fex$save_object(file = 'Rout/fit_fex.RDS')
} else{
  fit_fex <- readRDS('Rout/fit_fex.RDS')
}


gg_cure=mcmc_intervals(fit_fex$draws(c("p_1")))+
  ggtitle('Probability of cure')+xlim(0,1)+theme_minimal()
gg_sample=mcmc_intervals(fit_fex$draws(c("p_2")))+
  ggtitle('Probability of sampling parasites')+xlim(0,1)+theme_minimal()
pp=grid.arrange(gg_cure, gg_sample,nrow=2)
mcmc_intervals(fit_fex$draws(c('q')))

```

### E1224 fit

```{r e1224_stan_fit}
pcr_chagas_ss = pcr_chagas %>% 
  filter(!is.na(N_pos_sample), 
         !is.na(N_PCRs_sample), 
         VISIT_numeric>EOT,
         STUDYID=='E1224') 

data_list_stan=make_stan_dataset_model_v2(pcr_chagas_ss,PCR_spec=PCR_spec)
if(RE_RUN_STAN_MODEL){
  fit_e1224 <- mod$sample(
    data = data_list_stan,
    seed = 123,
    chains = 4,
    parallel_chains = 4,iter_sampling = 2000,
    refresh = 500 # print update every 500 iters
  )
  fit_e1224$save_object(file = 'Rout/fit_e1224.RDS')
} else{
  fit_e1224 <- readRDS('Rout/fit_e1224.RDS')
}

gg_cure=mcmc_intervals(fit_e1224$draws(c("p_1")))+
  ggtitle('Probability of cure')+xlim(0,1)+theme_minimal()
gg_sample=mcmc_intervals(fit_e1224$draws(c("p_2")))+
  ggtitle('Probability of sampling parasites')+xlim(0,1)+theme_minimal()
pp=grid.arrange(gg_cure, gg_sample,nrow=2)
mcmc_intervals(fit_e1224$draws(c("q")))
```

### All data fit

Fit to all data

```{r all_data_fit, fig.width=10}
pcr_chagas_ss = pcr_chagas %>% 
  filter(!is.na(N_pos_sample), 
         !is.na(N_PCRs_sample), 
         VISIT_numeric>EOT,
         !USUBJID %in% c('594','681','342')) %>%
  arrange(ARM)

data_list_stan=
  make_stan_dataset_model_v2(pcr_chagas_ss,
                             PCR_spec=PCR_spec,
                             p_1_beta_prior = .5,
                             p_2_beta_prior = 2)

if(RE_RUN_STAN_MODEL){
  fit_all <- mod$sample(
    data = data_list_stan,
    seed = 123,
    chains = 4,
    parallel_chains = 4,iter_sampling = 2000,
    refresh = 500 # print update every 500 iters
  )
  fit_all$save_object(file = 'Rout/fit_all.RDS')
} else{
  fit_all <- readRDS('Rout/fit_all.RDS')
}
gg1=mcmc_intervals(fit_all$draws(c("p_1")))+
  ggplot2::scale_y_discrete(labels =
                              c("p_1[13]" ="Placebo",
                                "p_1[3]" ="BNZ 2wks",
                                "p_1[1]" ="BNZ 150 4wks",
                                "p_1[4]" ="BNZ 300 4wks",
                                "p_1[2]" ="BNZ 150 4wks + E1224",
                                "p_1[6]" ="BNZ 300 wkly + E1224",
                                "p_1[5]" ="BNZ 300 8 wks",
                                "p_1[7]" ="E1224 LD 8W",
                                "p_1[8]" ="E1224 HD 4W",
                                "p_1[9]" ="E1224 HD 8W",
                                "p_1[10]" ="FEX 3d",
                                "p_1[11]" ="FEX 10d",
                                "p_1[12]" ="FEX 7d"))+
  ggtitle('Probability of cure')+xlim(0,1)+theme_minimal()
gg2=mcmc_intervals(fit_all$draws(c("p_2")))+
  ggplot2::scale_y_discrete(labels =
                              c("p_2[13]" ="Placebo",
                                "p_2[3]" ="BNZ 2wks",
                                "p_2[1]" ="BNZ 150 4wks",
                                "p_2[4]" ="BNZ 300 4wks",
                                "p_2[2]" ="BNZ 150 4wks + E1224",
                                "p_2[6]" ="BNZ 300 wkly + E1224",
                                "p_2[5]" ="BNZ 300 8 wks",
                                "p_2[7]" ="E1224 LD 8W",
                                "p_2[8]" ="E1224 HD 4W",
                                "p_2[9]" ="E1224 HD 8W",
                                "p_2[10]" ="FEX 3d",
                                "p_2[11]" ="FEX 10d",
                                "p_2[12]" ="FEX 7d"))+
  ggtitle('Probability of sampling parasites')+xlim(0,1)+theme_minimal()
pp=grid.arrange(gg1, gg2,nrow=1)
mcmc_intervals(fit_all$draws(c("q")))
```

### adding covariate effects

```{r}
file2 <- file.path("Stan_models/chagas_efficacy_model_v3.stan")
mod2 <- cmdstan_model(file2)
```

```{r}
pcr_chagas_ss = pcr_chagas %>% 
  filter(!is.na(N_pos_sample), 
         !is.na(N_PCRs_sample), 
         Day_frm_rand>EOT,
         STUDYID=='BENDITA',ARM=='PLACEBO',
         !USUBJID %in% c('594','681','342')) 
pcr_chagas_ss$SITEID=as.factor(pcr_chagas_ss$SITEID)
data_list_stan=
  make_stan_dataset_model_v2(pcr_chagas_ss,
                             PCR_spec = PCR_spec,x_covs = c('Mean_CT_inv_baseline'))

if(RE_RUN_STAN_MODEL){
  fit_ben <- mod2$sample(
    data = data_list_stan,
    seed = 123,
    chains = 4,
    parallel_chains = 4,iter_sampling = 2000,
    refresh = 500 # print update every 500 iters
  )
  fit_ben$save_object(file = 'Rout/fit_bendita_cov.RDS')
} else{
  fit_ben <- readRDS('Rout/fit_bendita_cov.RDS')
}
```
